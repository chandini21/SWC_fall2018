fahr_to_celsius <- function(temp){
temp_k <- fahr_to_Kelvin(temp)
result <- kelvin_to_celsius(temp_k)
result
}
print(paste("Freezing point of water in celsius: ",fahr_to_celsius(32.0)))
fahr_to_Kelvin <- function(temp){
kelvin <- ((temp -32) * (5/9)) + 273.15
kelvin
}
fahr_to_Kelvin(32)
print(paste("Boiling point water: ",fahr_to_Kelvin(212)))
# print("Boiling point water: ",fahr_to_Kelvin(212))
kelvin_to_celsius <- function(temp){
celsius <- temp - 273.15
celsius
}
paste('Absolute zero in celsius:', kelvin_to_celsius(0)) #doesn't run when run in a script
fahr_to_celsius <- function(temp){
temp_k <- fahr_to_Kelvin(temp)
result <- kelvin_to_celsius(temp_k)
result
}
print(paste("Freezing point of water in celsius: ",fahr_to_celsius(32.0)))
fence <- function(original,wrapper) {
result <- paste0(wrapper,original,wrapper)
return(result)
}
fence("James","____")
# location of the data
filename <- 'Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
# read the data
gapminder <- read.table(filename, header = TRUE)
# location of the data
filename <- 'Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
setwd("C:/Users/Chandini Akula/Desktop/SWC_fall2018")
# location of the data
filename <- 'Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
# read the data
gapminder <- read.table(file = filename, header = TRUE)
# location of the data
filename <- 'Data/gapminder.txt'
# read the data
gapminder <- read.table(file = filename, header = TRUE)
gap <- read.table(file = filename, header = TRUE)
setwd("C:/Users/Chandini Akula/Desktop/SWC_fall2018")
# location of the data
filename <- 'Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
# location of the data
filename <- 'Data/Data/gapminder.txt'
# location of the data
filename <- 'Data/Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
view(gapminder)
View(gapminder)
#select the rows for the country Albania is ans store it
albaniaData <- gapminder[gapminder$country=="Albania",]
View(albaniaData)
# select column for GDP from albaniaData
albaniaGDP <- albaniaData$gdpPercap
View(albaniaGDP)
# compute the average  GDP for the country over the years
albaniaAverageGDP <- mean(albaniaGDP)
print(albaniaAverageGDP)
ls()
View(albaniaAverageGDP)
paste("The average GDP for Albania is:", albaniaAverageGDP)
#1st script
# location of the data
filename <- 'Data/Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
View(gapminder)
#gapminder <- read.table(file = filename, header = TRUE)
#select the rows for the country Albania is ans store it
albaniaData <- gapminder[gapminder$country=="Albania",]
View(albaniaData)
# select column for GDP from albaniaData
albaniaGDP <- albaniaData$gdpPercap
View(albaniaGDP)
# compute the average  GDP for the country over the years
albaniaAverageGDP <- mean(albaniaGDP)
print(albaniaAverageGDP)
View(albaniaAverageGDP)
paste("The average GDP for Albania is:", albaniaAverageGDP)
#1st script
# location of the data
filename <- 'Data/Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
View(gapminder)
#gapminder <- read.table(file = filename, header = TRUE)
#select the rows for the country Albania is ans store it
albaniaData <- gapminder[gapminder$country=="Albania",]
View(albaniaData)
# select column for GDP from albaniaData
albaniaGDP <- albaniaData$gdpPercap
View(albaniaGDP)
# compute the average  GDP for the country over the years
albaniaAverageGDP <- mean(albaniaGDP)
print(albaniaAverageGDP)
#View(albaniaAverageGDP)
paste("The average GDP for Albania is:", albaniaAverageGDP)
#1st script
# location of the data
filename <- 'Data/Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
#View(gapminder)
#gapminder <- read.table(file = filename, header = TRUE)
#select the rows for the country Albania is ans store it
albaniaData <- gapminder[gapminder$country=="Albania",]
#View(albaniaData)
# select column for GDP from albaniaData
albaniaGDP <- albaniaData$gdpPercap
#View(albaniaGDP)
# compute the average  GDP for the country over the years
albaniaAverageGDP <- mean(albaniaGDP)
print(albaniaAverageGDP)
#View(albaniaAverageGDP)
paste("The average GDP for Albania is:", albaniaAverageGDP)
#second script
albaniaAverageGDP
# clear old variables
rm(list - ls())
rm(list - ls())
#1st script
# location of the data
filename <- 'Data/Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
#View(gapminder)
#gapminder <- read.table(file = filename, header = TRUE)
#select the rows for the country Albania is ans store it
albaniaData <- gapminder[gapminder$country=="Albania",]
#View(albaniaData)
# select column for GDP from albaniaData
albaniaGDP <- albaniaData$gdpPercap
#View(albaniaGDP)
# compute the average  GDP for the country over the years
albaniaAverageGDP <- mean(albaniaGDP)
print(albaniaAverageGDP)
#View(albaniaAverageGDP)
paste("The average GDP for Albania is:", albaniaAverageGDP)
rm(list - ls())
rm(list = ls())
#1st script
# location of the data
filename <- 'Data/Data/gapminder.txt'
# read the data
gapminder <- read.table(filename, header = TRUE)
#View(gapminder)
#gapminder <- read.table(file = filename, header = TRUE)
#select the rows for the country Albania is ans store it
albaniaData <- gapminder[gapminder$country=="Albania",]
#View(albaniaData)
# select column for GDP from albaniaData
albaniaGDP <- albaniaData$gdpPercap
#View(albaniaGDP)
# compute the average  GDP for the country over the years
albaniaAverageGDP <- mean(albaniaGDP)
print(albaniaAverageGDP)
#View(albaniaAverageGDP)
paste("The average GDP for Albania is:", albaniaAverageGDP)
# clear old variables
rm(list = ls())
# location of data
filename <- 'Data/Data/gapminder.txt'
# read the data file
gapminder <- read.table(filename, header = TRUE)
getAverageGdpPerCapita <- function(country,gapminder){
# select country where you want to parse out GDP
selectedCountryData <- gapminder[gapminder$country == country]
mean(selectedCountryData)
}
gdpUSA <- getAverageGdpPerCapita("United States",gapminder)
getAverageGdpPerCapita <- function(country,gapminder){
# select country where you want to parse out GDP
selectedCountryData <- gapminder[gapminder$country == country]
mean(selectedCountryData)
}
gdpUSA <- getAverageGdpPerCapita("United States",gapminder)
gdpUSA <- getAverageGdpPerCapita("United_States",gapminder)
getAverageGdpPerCapita <- function(country,gapminder){
# select country where you want to parse out GDP
selectedCountryData <- gapminder[gapminder$country == country,]
mean(selectedCountryData)
}
getAverageGdpPerCapita <- function(country,gapminder){
# select country where you want to parse out GDP
selectedCountryData <- gapminder[gapminder$country == country,]
mean(selectedCountryData)
}
gdpUSA <- getAverageGdpPerCapita("United_States",gapminder)
paste("Average GDP of", selectedCountryData, "is: ",gdpUSA)
gdpUSA <- getAverageGdpPerCapita("United_States",gapminder)
getAverageGdpPerCapita <- function(country,gapminder){
# select country where you want to parse out GDP
selectedCountryData <- gapminder[gapminder$country == country,]
print(selectedCountryData)
mean(selectedCountryData)
}
gdpUSA <- getAverageGdpPerCapita("United_States",gapminder)
paste("Average GDP of", selectedCountryData, "is: ",gdpUSA)
gapminder
mean(selectedCountryData$gdpPercap)
getAverageGdpPerCapita <- function(country, gapminder){
# select country where you want to parse out GDP
selectedCountryData <- gapminder[gapminder$country == country,]
print(selectedCountryData)
mean(selectedCountryData$gdpPercap)
}
gdpUSA <- getAverageGdpPerCapita("United_States",gapminder)
getAverageGdpPerCapita <- function(country, gapminder){
# select country where you want to parse out GDP
selectedCountryData <- gapminder[gapminder$country == country,]
mean(selectedCountryData$gdpPercap)
}
gdpUSA <- getAverageGdpPerCapita("United_States",gapminder)
paste("Average GDP of", selectedCountryData, "is: ",gdpUSA)
getAverageGdpPerCapita <- function(country, gapminder){
# select country where you want to parse out GDP
# selectedCountryData <- gapminder[gapminder$country == country,]
selectedCountryData <- gapminder[gapminder$country == country,"gdpPercap"]
mean(selectedCountryData
# mean(selectedCountryData$gdpPercap)
}
getAverageGdpPerCapita <- function(country, gapminder){
# select country where you want to parse out GDP
# selectedCountryData <- gapminder[gapminder$country == country,]
selectedCountryData <- gapminder[gapminder$country == country,"gdpPercap"]
mean(selectedCountryData)
# mean(selectedCountryData$gdpPercap)
}
gdpUSA <- getAverageGdpPerCapita("United_States",gapminder)
paste("Average GDP of", selectedCountryData, "is: ",gdpUSA)
gdpUSA <- getAverageGdpPerCapita("United_States",gapminder)
paste("Average GDP of", selectedCountryData, "is: ",gdpUSA)
gdpUSA <- getAverageGdpPerCapita("United_States", gapminder)
gdpCanada <- getAverageGdpPerCapita("Canada", gapminder)
gdpMexico <- getAverageGdpPerCapita("Mexico", gapminder)
print(paste('GDP per cap of USA is',gdpUSA))
print(paste('GDP per cap of Canada is',gdpCanada))
print(paste('GDP per cap of Mexico is',gdpMexico
### trial
gdpUSA <- getAverageGdpPerCapita("United_States",gapminder)
selectedCountryData <- gapminder[gapminder$country == country,"gdpPercap"]
paste("Average GDP of", selectedCountryData, "is: ",gdpUSA)
setwd("C:/Users/Chandini Akula/Desktop/SWC_fall2018")
# install ggplot2
install.packages("ggplot2")
Rscript R_script.R
# load dependencies
library(ggplot2)
# load dependencies
library(ggplot2)
# load dependencies
library(ggplot2)
# read all the input data
gapdat <- read.table(file = 'Data/Data/gapminder.txt', header = TRUE)
# read all the input data
gapdata <- read.table(file = 'Data/Data/gapminder.txt', header = TRUE)
rm(list = ls())
setwd("C:/Users/Chandini Akula/Desktop/SWC_fall2018")
# install ggplot2
install.packages("ggplot2")
# load dependencies
library(ggplot2)
# read all the input data
gapdata <- read.table(file = 'Data/Data/gapminder.txt', header = TRUE)
# make first ggplot2
ggplot(data = gapdata, aes(X = gdpPercap, Y = lifeExp))
# make first ggplot2
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp))
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp)) + geom_point()
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp)) + geom_point() + geom_bar()#
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp)) + geom_bar()# blank
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp)) + geom_pointrange()# blank
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp)) + geom_line() # dots
# challenge 1
ggplot(data = gapdata, aes(x = year, y = lifeExp)) + geom_point() # dots
# challenge 1
ggplot(data = gapdata, aes(x = year, y = lifeExp)) + geom_line() # dots
# challenge 1
ggplot(data = gapdata, aes(x = year, y = lifeExp)) + geom_point() # dots
# change color
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp, color=continent)) + geom_point() # dots
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp, color=lifeExp)) + geom_point() # color
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp, color=continent)) + geom_line() # color
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp, by = country, color=continent)) + geom_line() # color
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp, by = country, color=continent)) + geom_point() # color
ggplot(data = gapdata, aes(x = gdpPercap, y = lifeExp, by = country, color=continent)) + geom_line() # color
ggplot(data = gapdata, aes(x = year, y = lifeExp, by = country, color=continent)) + geom_point() # color
ggplot(data = gapdata, aes(x = year, y = lifeExp, by = country, color=continent)) + geom_line() # color
ggplot(data = gapdata, aes(x = year, y = lifeExp, by = country)) + geom_point() # color
ggplot(data = gapdata, aes(x = year, y = lifeExp, by = country)) + geom_line() # color
ggplot(data = gapdata, aes(x = year, y = lifeExp, color=continent)) + geom_point() # color
ggplot(data = gapdata, aes(x = year, y = lifeExp, color=continent)) + geom_line() # color
ggplot(data = gapdata, aes(x = year, y = lifeExp, color=country)) + geom_line() # color
ggplot(data = gapdata, aes(x = year, y = lifeExp, color=continent)) + geom_point() # color
